export namespace Doubles {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace Ints {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace Id {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace NumericProp {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace StringProp {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace Points {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
    namespace _FieldEntry5 {
        function read(pbf: any, end: any): any;
        function _readField(tag: any, obj: any, pbf: any): void;
    }
}
export namespace Lines {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
    namespace _FieldEntry6 {
        function read(pbf: any, end: any): any;
        function _readField(tag: any, obj: any, pbf: any): void;
    }
}
export namespace Polygons {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
    namespace _FieldEntry8 {
        function read(pbf: any, end: any): any;
        function _readField(tag: any, obj: any, pbf: any): void;
    }
}
export namespace Tile {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace Properties {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
export namespace KeyValueObject {
    function read(pbf: any, end: any): any;
    function _readField(tag: any, obj: any, pbf: any): void;
}
//# sourceMappingURL=carto-spa-tile.d.ts.map